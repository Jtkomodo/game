package gameEngine;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;

import org.joml.Matrix4f;
import org.joml.Vector2f;

public class Text {
private static String Font="aakar";
private  int[] str;
private float[] uvCoords,Vert,Index;
private Texture tex;
private float Texwidth,Texheight;
private static File file=new File(System.getProperty("user.dir"));
private static boolean have=false;
private HashMap<Integer,Float[]> Values=new HashMap<Integer,Float[]>();
private Texture texture;



 public Text(String Font,float size) {//has to be 1 to 1
	 this.Font=Font;
	 this.tex= new Texture(Font);
	 loadFile();
	 this.Texwidth=size;
	 this.Texheight=size;
	texture= new Texture(Font);
	 
 }
 
 public void text(String text,float lx,float ly,float scale) {
	if(text.isEmpty()!=true) { 
	 char a=text.charAt(0);
	
	 Vector2f cursor=new Vector2f(lx,ly);
	 Float[] val=Values.get((int)a);
	 float x=val[0];
	 float y=val[1];
	 float width=val[2];
	 float height=val[3];
	 float xoff=val[4];
	 float yoff=val[5];
	 Vector2f offset=new Vector2f(xoff,-yoff);
	 float xadv=val[6];
	 float Xz=x/Texwidth;
	 float Yz=y/Texheight;
	 float Xo=(x+width)/Texwidth;
	 float Yo=(y+height)/Texheight;
	 float height2=height/scale;
	 float width2=width/scale;
	 
	 float[] uv={
				Xz,Yz,
				Xo,Yz,
				Xo,Yo,
				Xz,Yo
				};
		float[] vert={
				-width2,+height2,
				width2,height2,
				width2,-height2,
				-width2,-height2
			};
		
		
		int[] ind= {
			0,1,2,
			2,3,0	
				
		};
		Start.s.bind();
		texture.bind(1);

		cursor.add(offset);
		
		Model m=new Model(vert,uv,ind);
		 Matrix4f target=Math.getMatrix(cursor,0,scale);
		 Start.s.loadInt(Start.location, 1);
	  	 Start.s.loadMat(Start.Projection,Start.cam.getProjection());
	     Start.s.loadMat(Start.RTS, target);
		m.draw();
		target.identity();
		
		cursor.add(xadv, yoff);
		
		
	for(int i=1;i<text.length();i++) {
		 a=text.charAt(i);
         
		 val=Values.get((int)a);
		  x=val[0];
		 y=val[1];
		 width=val[2];
		 height=val[3];
		 xoff=val[4];
		 yoff=val[5];
		 offset =new Vector2f(xoff,-yoff);
		 
		 
		 xadv=val[6];
		 Xz=x/Texwidth;
		 Yz=y/Texheight;
		 Xo=(x+width)/Texwidth;
		 Yo=(y+height)/Texheight;
		 width2=width/scale;
		 height2=height/scale;
		 
		  float[] l=new float[]{
					Xz,Yz,
					Xo,Yz,
					Xo,Yo,
					Xz,Yo
					};
		  
			float[] v=new float[]{
					-width2,+height2,
					width2,height2,
					width2,-height2,
					-width2,-height2
				};
			
		  
		  
		  

		 m.changeUV(l);	
		 m.changeVert(v);
		 cursor.add(offset);
		 
		 target=Math.getMatrix(cursor,0,scale);
		 Start.s.loadInt(Start.location, 1);
	  	 Start.s.loadMat(Start.Projection,Start.cam.getProjection());
	     Start.s.loadMat(Start.RTS, target);
		 m.draw();
		 target.identity();
		 cursor.add(xadv, yoff);
		
		
	}
		
		
		
		
		
		
		
		
		
		
	}
 }
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 private void loadFile() {
	if(have!=true) {   
	   
		StringBuilder string=new StringBuilder();
		BufferedReader br;
		
		try{
			br=new BufferedReader(new FileReader(new File(file.getAbsolutePath()+"/src/res/fonts/"+Font+".fnt")));
			String line="";
			int i=0;
			int collums=0;
			int rows=0;
			int temp=0;
			while(true) {
			
			
			char c=(char)br.read();
			
			if(c=='*') {
				have=true;
		        line=line+" *";
				
				break;
			}
			
			
			if(c!='/') {
			line =line+c;
			
			
			}else {
				temp++;
				line=line+" ";
			}
			if(c=='\\') {
				collums++;
				rows=temp;
				temp=0;
			}
			
					
			
			
			
			i++;
			
			}
			
			br.close();
			i=0;
			int index=0;
			Float[] val=new Float[7]; 
			Integer ascii=0;
			String line2="";
			while(true){
				
			char c=line.charAt(i);
			if(c=='*') {
				
				break;
			}
			if((c==' ' || c=='\\')) {	
				if(index==1) {
					
					ascii=Integer.parseInt(line2);
				}
				if(index>1) {
				    val[index-2]=Float.parseFloat(line2);
				    }
			
				index++;
				if(c=='\\') {
				
					
					Values.put(ascii, val);
					index=0;
					val= new Float[7];
					
					
				}
				line2="";
				
			}else {
				line2=line2+c;}	
				
	
				
			
		i++;
			}
			
	
		}catch(IOException e) {
			e.printStackTrace();
		}
		
	
	   
	}
	     
   }
	
  
	
	
	
}
